scalar Date
scalar Token

type Card {
    id: ID!,
    uid: String,
    active: Boolean,
    keyA: String,
    keyB: String,
    createdAt: Date,
    updatedAt: Date
}

type Passenger {
    id: ID!,
    type: Int!,
    cardId: Int!,
    name: String!,
    lastName: String!,
    docType: String!,
    document: String!,
    createdAt: Date,
    updatedAt: Date
}

type User {
    id: ID!,
    passengerId: Passenger,
    userName: String,
    email: String!,
    role: Int,
    salt: String,
    hash: String,
    name: String!,
    lastName: String!,
    docType: String!,
    document: String!,
    createdAt: Date,
    updatedAt: Date
}

type Query {
    allCards: [Card],
    allPassengers: [Passenger],
    login(userName: String, email: String, password: String!): Token!
}

type Mutation {
    test(userName:String!,email:String!, password: String!): Boolean!
}
